{"remainingRequest":"/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/thread-loader/dist/cjs.js!/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/babel-loader/lib/index.js!/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/vuetify/lib/services/theme/index.js","dependencies":[{"path":"/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/vuetify/lib/services/theme/index.js","mtime":1586073576470},{"path":"/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1586073572494},{"path":"/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1586073576146},{"path":"/media/induwara/Data/GenixLabs/SVDattendance/vuetify-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":1586073572302}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}